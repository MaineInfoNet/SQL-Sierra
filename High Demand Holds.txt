/* Drop the temp table if it already exists */

DROP TABLE IF EXISTS tmpholds;

 

 

/* This is query is run first and create the temp table populating with bibs or items that have holds */

CREATE TEMP TABLE tmpholds AS

SELECT b.id AS "bib_id",

                COUNT(DISTINCT h.id) AS "hold_count",

 

                CASE

                                WHEN COUNT(DISTINCT i.id) IS NULL THEN 0

                                ELSE COUNT(DISTINCT i.id)

                END

                AS "item_count",

 

                                COUNT(DISTINCT ia.id) AS "avail_item_count",

                MAX(o1.order_count) AS "order_count", 

                STRING_AGG(DISTINCT i.location_code, ' ' ORDER BY i.location_code desc) AS "item_location",

                MAX(o1.order_location) AS "order_location",

                MAX(o1.fund_code) AS "fund_code",

 

                CASE

                                WHEN MAX(o1.order_copies) IS NULL THEN 0

                                ELSE MAX(o1.order_copies)

                END

                AS "order_copies"

 

FROM sierra_view.bib_record b

                LEFT JOIN sierra_view.bib_record_item_record_link bri ON bri.bib_record_id=b.id

                JOIN sierra_view.hold h ON (h.record_id=b.id OR h.record_id=bri.item_record_id)

                LEFT JOIN sierra_view.item_record i ON i.id=bri.item_record_id

                LEFT JOIN sierra_view.item_record ia ON ia.id=bri.item_record_id AND ia.item_status_code NOT IN ('m','n','z','s','$','d','8','w','y')

                LEFT JOIN (

                                SELECT count(o.id) AS "order_count", sum(oc.copies) AS "order_copies",

                                string_agg(distinct oc.location_code, ' ' order by oc.location_code desc) AS "order_location",

                                string_agg(concat(fm.code, '(', oc.copies, ')'), ' ' order by fm.code) as "fund_code",

                                bro.bib_record_id AS "bib_id"

                                FROM sierra_view.bib_record_order_record_link BRO

                                JOIN sierra_view.order_record o ON o.id=bro.order_record_id

                                JOIN sierra_view.order_record_cmf oc ON oc.order_record_id=o.id

                                JOIN sierra_view.fund_master fm ON fm.code_num=CAST(oc.fund_code AS INTEGER)

                                WHERE o.order_status_code in ('o', '1')

                                GROUP BY bro.bib_record_id) o1 ON o1.bib_id=b.id

WHERE

                h.status='0'

                AND h.is_frozen='FALSE'

GROUP BY b.id

HAVING COUNT(DISTINCT h.id)>0;

 

 

/* This is the report that shows useful things. */

SELECT 'b'||b.record_num||'a',

 

                CASE

                                WHEN STRING_AGG(DISTINCT mv.item_location, ' ' ORDER BY mv.item_location desc)

 

                IS NULL

                                THEN STRING_AGG(DISTINCT mv.order_location, ' ' ORDER BY mv.order_location DESC)

                                ELSE STRING_AGG(DISTINCT mv.item_location, ' ' ORDER BY mv.item_location DESC)

                END

                AS "Locations",

 

                STRING_AGG(mv.fund_code, ';') AS "Funds",

                brp.best_title,

                brp.best_author,

                brp.material_code,

                MAX(mv.item_count) AS "Total item count",

                MAX(mv.avail_item_count) AS "available item count",

                MAX(mv.order_copies) AS "Total order copies",

                MAX(mv.hold_count) AS "hold count",

                CASE

                                WHEN (MAX(mv.item_count) + MAX(mv.order_copies))=0 THEN MAX(mv.hold_count)

                                ELSE MAX(mv.hold_count)/(MAX(mv.item_count) + MAX(mv.order_copies))*1.00

                END

                AS "Ratio"

FROM sierra_view.bib_record_property brp

                JOIN tmpholds mv ON mv.bib_id=brp.bib_record_id

                JOIN sierra_view.bib_view b ON b.id=brp.bib_record_id

GROUP BY b.record_num, brp.best_title, brp.best_author, brp.material_code

HAVING

                (MAX(mv.item_count) + MAX(mv.order_copies))=0

                OR MAX(mv.hold_count)/(MAX(mv.item_count) + MAX(mv.order_copies))>=4

ORDER BY brp.material_code, "Ratio" desc

 